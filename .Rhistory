yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
set.seed(139)
samp = sample(nrow(train.df),100)
dummy_df = train.df[samp,]
dummyx = seq(50,250,1)
plot(W.L..next_year~W.L..same_year, data=train.df,cex=0.8,pch=16,col=rgb(0.5,0.5,0.5,0.3))
yhats = matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
yhats.rf=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$W.L..same_year=dummyx
yhat = predict(bag,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.5),lwd=0.5,lty=2:3)
yhats[i,]=yhat
yhat.rf = predict(rf1,new=rows)
lines(yhat.rf~dummyx,col=rgb(0,0.5,0,0.5),lwd=0.5,lty=2:3)
yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
set.seed(139)
samp = sample(nrow(train.df),100)
dummy_df = train.df[samp,]
dummyx = seq(0,100,1)
plot(W.L..next_year~W.L..same_year, data=train.df,cex=0.8,pch=16,col=rgb(0.5,0.5,0.5,0.3))
yhats = matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
yhats.rf=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$W.L..same_year=dummyx
yhat = predict(bag,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.5),lwd=0.5,lty=2:3)
yhats[i,]=yhat
yhat.rf = predict(rf1,new=rows)
lines(yhat.rf~dummyx,col=rgb(0,0.5,0,0.5),lwd=0.5,lty=2:3)
yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
samp = sample(nrow(train.df),100)
dummy_df = train.df[samp,]
dummyx = seq(1,2,.01)
plot(W.L..next_year~WHIP, data=train.df,cex=0.8,pch=16,col=rgb(0.5,0.5,0.5,0.3))
yhats = matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
yhats.rf=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$WHIP=dummyx
yhat = predict(bag,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.5),lwd=0.5,lty=2:3)
yhats[i,]=yhat
yhat.rf = predict(rf1,new=rows)
lines(yhat.rf~dummyx,col=rgb(0,0.5,0,0.5),lwd=0.5,lty=2:3)
yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
barplot(sort(tree2$variable.importance),horiz = T,las=2,cex.names = 0.6, main='Variable Importance for Pruned Decision Tree with all predictors')
varImpPlot(bag, cex=0.5)
varImpPlot(rf1,cex=0.5)
barplot(sort(tree4$variable.importance),horiz = T,las=2,cex.names = 0.6, main='Variable Importance for Pruned Decision Tree with 3 predictors')
tree3 = rpart(W.L..next_year~W.L..same_year + Age.pitch + WHIP,
data=train.df, control = list(minsplit=1, cp=0, maxdepth=20))
yhat.tree3.train = predict(tree3)
yhat.tree3.test = predict(tree3, newdata = test.df)
RMSE.tree3.train = RMSE(train.df$W.L..next_year,yhat.tree3.train)
RMSE.tree3.test = RMSE(test.df$W.L..next_year,yhat.tree3.test)
data.frame(train=RMSE.tree3.train,test=RMSE.tree3.test)
best.cp = tree3$cptable[,"CP"][which.min(tree3$cptable[,"xerror"])]
tree4 = prune(tree3,best.cp)
yhat.tree4.train = predict(tree4)
yhat.tree4.test = predict(tree4,newdata=test.df)
RMSE.tree4.train = RMSE(train.df$W.L..next_year,yhat.tree4.train)
RMSE.tree4.test = RMSE(test.df$W.L..next_year,yhat.tree4.test)
data.frame(train=RMSE.tree4.train,test=RMSE.tree4.test)
library(randomForest)
set.seed(139)
maxnodes = c(100,200,500)
ntree= 200
rmses.bag = rep(NA,length(maxnodes))
bestRMSE = sd(train.df$W.L..next_year)
for(i in 1:length(maxnodes)){
bagtemp = randomForest(formula(lm.full),data=train.df,
mtry=59, maxnodes=maxnodes[i], ntree=ntree)
rmses.bag[i]=RMSE(train.df$W.L..next_year, bagtemp$predicted)
if(rmses.bag[i]<bestRMSE){
best_maxnodes = maxnodes[i]
bestRMSE=rmses.bag[i]
bag=bagtemp
}
}
data.frame(maxnodes=maxnodes, RMSE=rmses.bag)
yhat.bag.train = predict(bag)
yhat.bag.test = predict(bag, newdata = test.df)
RMSE.bag.train = RMSE(train.df$W.L..next_year,yhat.bag.train)
RMSE.bag.test = RMSE(test.df$W.L..next_year,yhat.bag.test)
data.frame(train=RMSE.bag.train,test=RMSE.bag.test)
formula(lm.full)
library(randomForest)
set.seed(139)
maxnodes = c(100,200,500)
ntree= 200
rmses.bag = rep(NA,length(maxnodes))
bestRMSE = sd(train.df$W.L..next_year)
for(i in 1:length(maxnodes)){
bagtemp = randomForest(formula(lm.full),data=train.df,
mtry=56, maxnodes=maxnodes[i], ntree=ntree)
rmses.bag[i]=RMSE(train.df$W.L..next_year, bagtemp$predicted)
if(rmses.bag[i]<bestRMSE){
best_maxnodes = maxnodes[i]
bestRMSE=rmses.bag[i]
bag=bagtemp
}
}
data.frame(maxnodes=maxnodes, RMSE=rmses.bag)
yhat.bag.train = predict(bag)
yhat.bag.test = predict(bag, newdata = test.df)
RMSE.bag.train = RMSE(train.df$W.L..next_year,yhat.bag.train)
RMSE.bag.test = RMSE(test.df$W.L..next_year,yhat.bag.test)
data.frame(train=RMSE.bag.train,test=RMSE.bag.test)
library(randomForest)
set.seed(139)
maxnodes = c(100,200,500)
mtry = c(15, 25, 35, 45, 55)
ntree=200
pars = expand.grid(maxnodes=maxnodes,mtry=mtry)
RMSEs = rep(NA,nrow(pars))
bestRMSE = sd(train.df$W.L..next_year)
for(i in 1:nrow(pars)){
rftemp = randomForest(formula(lm.full),data=train.df,
mtry=pars$mtry[i], maxnodes=pars$maxnodes[i], ntree=ntree)
RMSEs[i]=RMSE(train.df$W.L..next_year, rftemp$predicted)
if(RMSEs[i]<bestRMSE){
best_maxnodes = maxnodes[i]
bestRMSE=RMSEs[i]
rf1=rftemp
}
}
data.frame(maxnodes=pars$maxnodes,mtry=pars$mtry,RMSE=RMSEs)
pars[which(RMSEs==bestRMSE),]
yhat.rf1.train = predict(rf1)
yhat.rf1.test = predict(rf1, newdata = test.df)
RMSE.rf1.train = RMSE(train.df$W.L..next_year,yhat.rf1.train)
RMSE.rf1.test = RMSE(test.df$W.L..next_year,yhat.rf1.test)
data.frame(train=RMSE.tree1.train,test=RMSE.rf1.test)
library(randomForest)
set.seed(139)
maxnodes = c(100,200,500)
mtry = c(1,2,3)
ntree=200
pars = expand.grid(maxnodes=maxnodes,mtry=mtry)
RMSEs = rep(NA,nrow(pars))
bestRMSE = sd(train.df$W.L..next_year)
for(i in 1:nrow(pars)){
rftemp = randomForest(W.L..next_year ~ W.L..same_year + Age.pitch + WHIP, data=train.df,
mtry=pars$mtry[i], maxnodes=pars$maxnodes[i], ntree=ntree)
RMSEs[i]=RMSE(train.df$W.L..next_year, rftemp$predicted)
if(RMSEs[i]<bestRMSE){
best_maxnodes = maxnodes[i]
bestRMSE=RMSEs[i]
rf2=rftemp
}
}
data.frame(maxnodes=pars$maxnodes,mtry=pars$mtry,RMSE=RMSEs)
pars[which(RMSEs==bestRMSE),]
yhat.rf2.train = predict(rf2)
yhat.rf2.test = predict(rf2, newdata = test.df)
RMSE.rf2.train = RMSE(train.df$W.L..next_year,yhat.rf2.train)
RMSE.rf2.test = RMSE(test.df$W.L..next_year,yhat.rf2.test)
data.frame(train=RMSE.tree1.train,test=RMSE.rf2.test)
set.seed(139)
samp = sample(nrow(train.df),100)
dummy_df = train.df[samp,]
dummyx = seq(0,100,1)
plot(W.L..next_year~W.L..same_year, data=train.df,cex=0.8,pch=16,col=rgb(0.5,0.5,0.5,0.3))
yhats = matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
yhats.rf=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$W.L..same_year=dummyx
yhat = predict(tree4,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.5),lwd=0.5,lty=2:3)
yhats[i,]=yhat
yhat.rf = predict(rf2,new=rows)
lines(yhat.rf~dummyx,col=rgb(0,0.5,0,0.5),lwd=0.5,lty=2:3)
yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
samp = sample(nrow(train.df),100)
dummy_df = train.df[samp,]
dummyx = seq(1,2,.01)
plot(W.L..next_year~WHIP, data=train.df,cex=0.8,pch=16,col=rgb(0.5,0.5,0.5,0.3))
yhats = matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
yhats.rf=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$WHIP=dummyx
yhat = predict(tree4,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.5),lwd=0.5,lty=2:3)
yhats[i,]=yhat
yhat.rf = predict(rf2,new=rows)
lines(yhat.rf~dummyx,col=rgb(0,0.5,0,0.5),lwd=0.5,lty=2:3)
yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
set.seed(139)
samp = sample(nrow(train.df),100)
dummy_df = train.df[samp,]
dummyx = seq(0,100,1)
plot(W.L..next_year~W.L..same_year, data=train.df,cex=0.8,pch=16,col=rgb(0.5,0.5,0.5,0.3))
yhats = matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
yhats.rf=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$W.L..same_year=dummyx
yhat = predict(bag,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.5),lwd=0.5,lty=2:3)
yhats[i,]=yhat
yhat.rf = predict(rf1,new=rows)
lines(yhat.rf~dummyx,col=rgb(0,0.5,0,0.5),lwd=0.5,lty=2:3)
yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
samp = sample(nrow(train.df),100)
dummy_df = train.df[samp,]
dummyx = seq(1,2,.01)
plot(W.L..next_year~WHIP, data=train.df,cex=0.8,pch=16,col=rgb(0.5,0.5,0.5,0.3))
yhats = matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
yhats.rf=matrix(NA,nrow=nrow(dummy_df),ncol=length(dummyx))
for(i in 1:nrow(dummy_df)){
rows=dummy_df[rep(i,length(dummyx)),]
rows$WHIP=dummyx
yhat = predict(bag,new=rows)
lines(yhat~dummyx,col=rgb(0.5,0,0,0.5),lwd=0.5,lty=2:3)
yhats[i,]=yhat
yhat.rf = predict(rf1,new=rows)
lines(yhat.rf~dummyx,col=rgb(0,0.5,0,0.5),lwd=0.5,lty=2:3)
yhats.rf[i,]=yhat.rf
}
mean_yhat = apply(yhats,2,mean)
mean_yhat.rf = apply(yhats.rf,2,mean)
lines(mean_yhat~dummyx,col=rgb(0.5,0,0,1),lwd=3)
lines(mean_yhat.rf~dummyx,col=rgb(0,0.5,0,1),lwd=3)
barplot(sort(tree2$variable.importance),horiz = T,las=2,cex.names = 0.6, main='Variable Importance for Pruned Decision Tree with all predictors')
varImpPlot(bag, cex=0.5)
varImpPlot(rf1,cex=0.5)
barplot(sort(tree4$variable.importance),horiz = T,las=2,cex.names = 0.6, main='Variable Importance for Pruned Decision Tree with 3 predictors')
varImpPlot(rf2, cex=0.5)
barplot(sort(tree2$variable.importance),horiz = T,las=2,cex.names = 0.2, main='Variable Importance for Pruned Decision Tree with all predictors')
varImpPlot(bag, cex=0.5)
varImpPlot(rf1,cex=0.5)
barplot(sort(tree4$variable.importance),horiz = T,las=2,cex.names = 0.6, main='Variable Importance for Pruned Decision Tree with 3 predictors')
varImpPlot(rf2, cex=0.5)
barplot(sort(tree2$variable.importance),horiz = T,las=2,cex.names = 0.4, main='Variable Importance for Pruned Decision Tree with all predictors')
varImpPlot(bag, cex=0.5)
varImpPlot(rf1,cex=0.5)
barplot(sort(tree4$variable.importance),horiz = T,las=2,cex.names = 0.6, main='Variable Importance for Pruned Decision Tree with 3 predictors')
varImpPlot(rf2, cex=0.5)
set.seed(139)
library(rpart)
RMSE = function(y,yhat){
return(sqrt(mean((y-yhat)^2)))
}
test.df = subset(test.df, test.df$Tm != 'CLE')
tree1 = rpart(formula(lm.full),data=train.df, control = list(minsplit=1,cp=0,maxdepth=40))
yhat.tree1.train = predict(tree1)
yhat.tree1.test = predict(tree1, newdata = test.df)
RMSE.tree1.train = RMSE(train.df$W.L..next_year,yhat.tree1.train)
RMSE.tree1.test = RMSE(test.df$W.L..next_year,yhat.tree1.test)
data.frame(train=RMSE.tree1.train,test=RMSE.tree1.test)
set.seed(139)
library(rpart)
RMSE = function(y,yhat){
return(sqrt(mean((y-yhat)^2)))
}
test.df = subset(test.df, test.df$Tm != 'CLE')
tree1 = rpart(formula(lm.full),data=train.df, control = list(minsplit=1,cp=0,maxdepth=20))
yhat.tree1.train = predict(tree1)
yhat.tree1.test = predict(tree1, newdata = test.df)
RMSE.tree1.train = RMSE(train.df$W.L..next_year,yhat.tree1.train)
RMSE.tree1.test = RMSE(test.df$W.L..next_year,yhat.tree1.test)
data.frame(train=RMSE.tree1.train,test=RMSE.tree1.test)
set.seed(139)
library(rpart)
RMSE = function(y,yhat){
return(sqrt(mean((y-yhat)^2)))
}
test.df = subset(test.df, test.df$Tm != 'CLE')
tree1 = rpart(formula(lm.full),data=train.df, control = list(minsplit=1,cp=1,maxdepth=20))
yhat.tree1.train = predict(tree1)
yhat.tree1.test = predict(tree1, newdata = test.df)
RMSE.tree1.train = RMSE(train.df$W.L..next_year,yhat.tree1.train)
RMSE.tree1.test = RMSE(test.df$W.L..next_year,yhat.tree1.test)
data.frame(train=RMSE.tree1.train,test=RMSE.tree1.test)
set.seed(139)
library(rpart)
RMSE = function(y,yhat){
return(sqrt(mean((y-yhat)^2)))
}
test.df = subset(test.df, test.df$Tm != 'CLE')
tree1 = rpart(formula(lm.full),data=train.df, control = list(minsplit=1,cp=0,maxdepth=20))
yhat.tree1.train = predict(tree1)
yhat.tree1.test = predict(tree1, newdata = test.df)
RMSE.tree1.train = RMSE(train.df$W.L..next_year,yhat.tree1.train)
RMSE.tree1.test = RMSE(test.df$W.L..next_year,yhat.tree1.test)
data.frame(train=RMSE.tree1.train,test=RMSE.tree1.test)
tab <- matrix(c(RMSE.tree1.train, RMSE.tree1.test,
RMSE.tree2.train, RMSE.tree2.test,
RMSE.bag.train, RMSE.bag.test,
RMSE.rf1.train, RMSE.rf1.test,
RMSE.rf2.train, RMSE.rf2.test,
RMSE.tree4.train, RMSE.tree4.test), nrow=6, byrow = TRUE
)
colnames(tab) <- c('train','test')
rownames(tab) <- c('tree1','tree2','bag', 'rf1', 'rf2', 'tree4')
tab <- as.table(tab)
tab
data.frame(tab)
as.data.frame(tab)
tab
tab <- as.data.frame(tab)
tab
as.data.frame.matrix(tab)
tab
tab <- as.table(tab)
rownames(tab) <- c('tree1','tree2','bag', 'rf1', 'rf2', 'tree4')
tab <- as.table(tab)
colnames(tab) <- c('train','test')
rownames(tab) <- c('tree1','tree2','bag', 'rf1', 'rf2', 'tree4')
tab <- as.table(tab)
tab <- matrix(c(RMSE.tree1.train, RMSE.tree1.test,
RMSE.tree2.train, RMSE.tree2.test,
RMSE.bag.train, RMSE.bag.test,
RMSE.rf1.train, RMSE.rf1.test,
RMSE.rf2.train, RMSE.rf2.test,
RMSE.tree4.train, RMSE.tree4.test), nrow=6, byrow = TRUE
)
colnames(tab) <- c('train','test')
rownames(tab) <- c('tree1','tree2','bag', 'rf1', 'rf2', 'tree4')
tab <- as.table(tab)
tab
set.seed(139)
library(rpart)
RMSE = function(y,yhat){
return(sqrt(mean((y-yhat)^2)))
}
test.df = subset(test.df, test.df$Tm != 'CLE')
tree1 = rpart(formula(lm.full),data=train.df, control = list(minsplit=1,cp=0,maxdepth=20))
yhat.tree1.train = predict(tree1)
yhat.tree1.test = predict(tree1, newdata = test.df)
RMSE.tree1.train = RMSE(train.df$W.L..next_year,yhat.tree1.train)
RMSE.tree1.test = RMSE(test.df$W.L..next_year,yhat.tree1.test)
data.frame(train=RMSE.tree1.train,test=RMSE.tree1.test)
set.seed(139)
best.cp = tree1$cptable[,"CP"][which.min(tree1$cptable[,"xerror"])]
tree2 = prune(tree1,best.cp)
yhat.tree2.train = predict(tree2)
yhat.tree2.test = predict(tree2,newdata=test.df)
RMSE.tree2.train = RMSE(train.df$W.L..next_year,yhat.tree2.train)
RMSE.tree2.test = RMSE(test.df$W.L..next_year,yhat.tree2.test)
data.frame(train=RMSE.tree2.train,test=RMSE.tree2.test)
set.seed(139)
library(randomForest)
maxnodes = c(100,200,500)
ntree= 200
rmses.bag = rep(NA,length(maxnodes))
bestRMSE = sd(train.df$W.L..next_year)
for(i in 1:length(maxnodes)){
bagtemp = randomForest(formula(lm.full),data=train.df,
mtry=56, maxnodes=maxnodes[i], ntree=ntree)
rmses.bag[i]=RMSE(train.df$W.L..next_year, bagtemp$predicted)
if(rmses.bag[i]<bestRMSE){
best_maxnodes = maxnodes[i]
bestRMSE=rmses.bag[i]
bag=bagtemp
}
}
data.frame(maxnodes=maxnodes, RMSE=rmses.bag)
set.seed(139)
library(dplyr)
# Load team data
team_data = list()
team_wins <- list()
drop = c("W", "L")
for (year in 1997:2022) {
df1 = read.csv(paste("data/teams_data/batting", year, ".csv", sep=""))
df2 = read.csv(paste("data/teams_data/pitching", year, ".csv", sep=""))
df3 = read.csv(paste("data/teams_data/fielding", year, ".csv", sep=""))
df_tot = merge(merge(df1, df2, by="Tm", suffixes=c(".bat", ".pitch")), df3, by="Tm", suffixes=c("", ".field"))
df_tot = df_tot[
!(df_tot$Tm %in% c("", "League Average")),
!(names(df_tot) %in% drop)
]
df_tot$Tm = factor(df_tot$Tm)
team_data[[year]] = df_tot
team_wins[[year]] = df_tot[, c("Tm", "W.L.")]
}
# Load player data
years <- 1997:2022
bps <- c("batting", "pitching", "fielding")
player_data <- list()
for (year in years) {
player_data[[year]] <- list()
for (bp in bps) {
player_data[[year]][[bp]] <- read.csv(paste("data/player_data/", bp, year, ".csv", sep=""))
quant_cols <- names(select_if(player_data[[year]][[bp]], is.numeric))
for (col in quant_cols) {
# impute data with mean
df <- player_data[[year]][[bp]]
player_data[[year]][[bp]][is.na(player_data[[year]][[bp]][,col]),col] <- mean(df[,col], na.rm=TRUE)
}
}
}
fa_data = list()
for (year in years) {
fa_data[[year]] = read.csv(paste("data/fa_data/fa", year, ".csv", sep=""))
fa_data[[year]]$WAR3[is.na(fa_data[[year]]$WAR3)] = 0
}
set.seed(139)
# Data Cleaning for the Team Data
team_wins <- list()
for (year in years) {
team_wins[[year]] <- team_data[[year]][!(team_data[[year]]$Tm %in% c("", "League Average")), c("Tm", "W.L.")]
}
set.seed(139)
# Clean player data
for (year in years) {
for (bp in bps) {
player_data[[year]][[bp]]$year <- year
player_data[[year]][[bp]]$year_adj <- year - 1997
}
}
for (year in years) {
player_data[[year]][["pitching"]] = player_data[[year]][["pitching"]][!is.infinite(player_data[[year]][["pitching"]]$ERA),]
}
long_team_names <- team_data[[year]][!(team_data[[year]]$Tm %in% c("", "League Average")),]$Tm
short_team_names <- c("ARI", "ATL", "BAL", "BOS", "CHC", "CHW", "CIN", "CLE", "COL", "DET",
"HOU", "KCR", "LAA", "LAD", "MIA", "MIL", "MIN", "NYM", "NYY", "OAK",
"PHI", "PIT", "SDP", "SFG", "SEA", "STL", "TBR", "TEX", "TOR", "WSN")
agg_data <- list()
for (year in years) {
agg_data[[year]] <- list()
for (bp in bps) {
quant_cols <- names(select_if(player_data[[year]][[bp]], is.numeric))
agg_data[[year]][[bp]] <- player_data[[year]][[bp]][, c("Tm", quant_cols)] %>%
group_by(Tm) %>%
summarise(across(quant_cols, ~weighted.mean(., w = G)))
agg_data[[year]][[bp]] <- agg_data[[year]][[bp]][!(agg_data[[year]][[bp]]$Tm == "TOT"),]
agg_data[[year]][[bp]]$long_Tm <- factor(
agg_data[[year]][[bp]]$Tm,
levels=short_team_names,
labels=long_team_names
)
}
}
player_combo <- list()
for (year in years) {
player_combo[[year]] <- merge(merge(agg_data[[year]][[bps[1]]], agg_data[[year]][[bps[2]]], by="Tm", suffixes=c(".bat", ".pitch")), agg_data[[year]][[bps[3]]], by="Tm", suffixes=c("", ".field"))
}
agg_fa_data <- list()
for (year in years) {
agg_fa_data[[year]] = fa_data[[year]] %>% group_by(To.Team) %>% summarise(tot_fa_war3=sum(WAR3), num_fas=n())
}
# add response variable to player data
player_with_wins <- list()
for (year in 1997:2021) {
player_with_wins[[year]] <- merge(player_combo[[year]], team_wins[[year+1]], by.x="long_Tm.pitch", by.y="Tm", suffixes=c(".same_year", ".next_year"))
}
player_with_wins_fa <- list()
for (year in 1997:2021) {
player_with_wins_fa[[year]] <- merge(player_with_wins[[year]], agg_fa_data[[year]], by.x="long_Tm.pitch", by.y="To.Team")
}
player_with_wins_combined = bind_rows(player_with_wins_fa, )
player_with_wins_combined$W.L..same_year = 100 * player_with_wins_combined$W.L..same_year
player_with_wins_combined$W.L..next_year = 100 * player_with_wins_combined$W.L..next_year
drop_cols = c("long_Tm.pitch", "Rk.bat", "G.bat", "long_Tm.bat", "Rk.pitch", "W", "L", "G.pitch", "long_Tm",
"Age", "GS", "CG", "GS.field", "CG.field", "Rdrs", "Rdrs.yr", "Rgood")
player_with_wins_combined = player_with_wins_combined[, !(names(player_with_wins_combined) %in% drop_cols)]
n.rows = nrow(player_with_wins_combined)
n.train = 0.8 * n.rows
train.rows = sample(n.rows, n.train)
train.df = player_with_wins_combined[train.rows,]
colnames(train.df)[colnames(train.df) == 'OPS.'] <- 'OPSplus'
colnames(train.df)[colnames(train.df) == 'ERA.'] <- 'ERAplus'
test.df = player_with_wins_combined[-train.rows,]
colnames(test.df)[colnames(test.df) == 'OPS.'] <- 'OPSplus'
colnames(test.df)[colnames(test.df) == 'ERA.'] <- 'ERAplus'
set.seed(139)
# train.df
names(train.df)
set.seed(139)
barplot(sort(tree2$variable.importance),horiz = T,las=2,cex.names = 0.4, main='Variable Importance for tree2')
